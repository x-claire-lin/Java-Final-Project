package dataAccessLayer;

import model.SubscriptionMsg;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

/**
 *
 * @author Cheng Zhang
 */
public class SubscriptionMsgDaoImpl {

    public SubscriptionMsgDaoImpl() {
    }

    public ArrayList<SubscriptionMsg> getAllSubscriptionMsgs(int recipientID) throws SQLException {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        ResultSet resultSet = null;
        ArrayList<SubscriptionMsg> msgs = null;
        try {
            DatabaseConnection databaseConnection = new DatabaseConnection();
            connection = databaseConnection.createConnection();
            preparedStatement = connection.prepareStatement(
                    "SELECT * FROM SubscriptionMsg WHERE recipientID = ? ");
            preparedStatement.setInt(1, recipientID);
            resultSet = preparedStatement.executeQuery();
            msgs = new ArrayList<SubscriptionMsg>();
            while (resultSet.next()) {
                SubscriptionMsg msg = new SubscriptionMsg();
                msg.setId(resultSet.getInt("ID"));
                msg.setSenderName(resultSet.getString("senderName"));
                msg.setRecipientID(resultSet.getInt("recipientID"));
                msg.setContent(resultSet.getString("content"));
                msg.setDateSent(resultSet.getDate("dateSent"));
                msgs.add(msg);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            throw e;

        } finally {
            try {
                if (resultSet != null) {
                    resultSet.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
        return msgs;
    }

    public void addSubscriptionMsg(SubscriptionMsg msg) {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        try {
            DatabaseConnection databaseConnection = new DatabaseConnection();
            connection = databaseConnection.createConnection();
            // do not insert productID, it is generated by Database
            String query = "INSERT INTO SubscriptionMsg "
                    + "(senderName, recipientID, content, dateSent)"
                    + " VALUES(?, ?, ?, ?)";
            preparedStatement = connection.prepareStatement(query);
            preparedStatement.setString(1, msg.getSenderName());
            preparedStatement.setInt(2, msg.getRecipientID());
            preparedStatement.setString(3, msg.getContent());
            preparedStatement.setDate(4, msg.getDateSent());
            preparedStatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }

    public void deleteSubscriptionMsg(int id) {
        Connection connection = null;
        PreparedStatement preparedStatement = null;
        try {
            DatabaseConnection databaseConnection = new DatabaseConnection();
            connection = databaseConnection.createConnection();
            String query = "DELETE FROM SubscriptionMsg WHERE ID = ?";
            preparedStatement = connection.prepareStatement(query);
            preparedStatement.setInt(1, id);
            preparedStatement.executeUpdate();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException ex) {
                System.out.println(ex.getMessage());
            }
        }
    }
}
